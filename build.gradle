
plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.61"
    id 'org.jetbrains.dokka' version '0.10.0'
    id 'maven'
    id 'signing'
    id "me.champeau.gradle.jmh" version "0.5.0"
}

group 'com.natpryce'
version(hasProperty("-version") ? property("-version") : "SNAPSHOT")

println "building version ${version}"

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib"

    testCompile "org.jetbrains.kotlin:kotlin-stdlib"
    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile 'junit:junit:4.12'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'result4k',
                'Implementation-Vendor': 'com.natpryce',
                'Implementation-Version': version
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}


dokka {
    outputFormat 'javadoc'
    outputDirectory 'build/javadoc'
}

task javadocJar(type: Jar, dependsOn: 'dokka') {
    classifier 'javadoc'
    from 'build/javadoc'
}

test {
    include 'com/natpryce/**'
    scanForTestClasses true
    reports {
        junitXml.enabled = true
        html.enabled = true
    }

    beforeTest { desc ->
        print "${desc.className.substring("com.natpryce.".length())}: ${desc.name.replace("_", " ")}"
    }
    afterTest { desc, result ->
        println " -> ${result.resultType}"
    }
}

artifacts {
    archives sourcesJar, javadocJar
}

signing {
    required { hasProperty("sign") || gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

task ossrhAuthentication {
    doLast {
        if (!(project.hasProperty('ossrh.username') && project.hasProperty('ossrh.password'))) {
            throw new InvalidUserDataException("no OSSRH username and/or password!")
        }
    }
}

uploadArchives {
    dependsOn ossrhAuthentication

    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: project.properties["ossrh.username"],
                        password: project.properties["ossrh.password"])
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: project.properties["ossrh.username"],
                        password: project.properties["ossrh.password"])
            }

            pom.project {
                name 'HamKrest'
                packaging 'jar'
                description 'A Result type for Kotlin'
                url 'https://github.com/npryce/result4k'

                scm {
                    connection 'git@github.com:npryce/result4k.git'
                    url 'https://github.com/npryce/result4k'
                }

                licenses {
                    license {
                        name 'Apache 2.0'
                        url 'http://opensource.org/licenses/Apache-2.0'
                    }
                }

                developers {
                    developer {
                        id 'npryce'
                        name 'Nat Pryce'
                    }
                }
            }
        }
    }
}

wrapper {
    gradleVersion = '6.0'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
    }
}

